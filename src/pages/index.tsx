import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import SourceCode from "y/components/GPT/SourceCode";
import UserAnimationDescription from "y/components/GPT/UserAnimationDescription";
import VideoPlayer from "y/components/Video/VideoPlayer";

import { api } from "y/utils/api";

const Home: NextPage = () => {
  const [videoURL, setVideoURL] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [selectedType, setSelectedType] = useState<"code" | "gpt">("gpt"); // ["code", "gpt"
  const [sourceCode, setSourceCode] = useState<string>();
  return (
    <>
      <Head>
        <title>Manim UI</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen  flex-col items-center justify-center overflow-hidden bg-zinc-900">
        <nav className="fixed top-0  flex h-20 w-screen items-center justify-end bg-zinc-800 shadow-lg">
          <p className="float-left ml-10 mr-auto  text-2xl font-bold text-white">
            Manim UI
          </p>
          <div className="mr-10">
            <AuthShowcase />
          </div>
        </nav>
        <div className="flex h-full w-full">
          <div className="flex h-full w-1/2 flex-col items-center p-7">
            <div className="flex w-3/4 flex-row items-center justify-center  rounded-md font-semibold text-white">
              {" "}
              <button
                onClick={() => {
                  setSelectedType("gpt");
                }}
                className={`w-1/2 p-2 transition ${
                  selectedType === "gpt" ? "ring-1  ring-zinc-400" : ""
                } bg-zinc-800`}
              >
                GPT-4
              </button>
              <button
                onClick={() => {
                  setSelectedType("code");
                }}
                className={`ml-1 w-1/2 bg-zinc-800 p-2 transition ${
                  selectedType === "code" ? "ring-1 ring-zinc-400" : ""
                }`}
              >
                Code
              </button>
            </div>

            <UserAnimationDescription
              setIsLoading={setIsLoading}
              setVideoURL={setVideoURL}
              selectedType={selectedType}
            />
          </div>
          <div className="mt-36 flex h-full w-1/2 flex-col items-center">
            <VideoPlayer isLoading={isLoading} videoURL={videoURL} />
            <SourceCode sourceCode={sourceCode} />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <button
      className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
      onClick={sessionData ? () => void signOut() : () => void signIn()}
    >
      {sessionData ? "Sign out" : "Sign in"}
    </button>
  );
};
